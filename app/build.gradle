/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.2.4'
    // id 'io.freefair.lombok' version '4.1.6'
}
apply plugin: 'io.spring.dependency-management'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')
    // implementation('org.slf4j:slf4j-api')
    implementation('org.projectlombok:lombok')
    implementation('org.springframework.boot:spring-boot-starter-test')
    implementation("org.slf4j:slf4j-nop:1.7.36")
    implementation("org.apache.commons:commons-math3:3.6.1")

   developmentOnly( 'org.springframework.boot:spring-boot-devtools')
   runtimeOnly( 'com.h2database:h2')
}

application {
    // Define the main class for the application.
    mainClass = 'ta_java.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

javadoc {
    destinationDir = file("${buildDir}/docs/javadoc")
}
// logging {
// file ('build.log', LogLevel.DEBUG)
// // console (LogLevel.INFO 39)
// }

println 'A message which is logged at QUIET level'